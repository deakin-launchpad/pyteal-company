#pragma version 8
txn ApplicationID
int 0
==
bnz main_l21
txn OnCompletion
int DeleteApplication
==
bnz main_l20
txn OnCompletion
int UpdateApplication
==
bnz main_l19
txn OnCompletion
int OptIn
==
bnz main_l18
txn OnCompletion
int CloseOut
==
bnz main_l17
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txna ApplicationArgs 0
byte "mint_coins"
==
bnz main_l16
txna ApplicationArgs 0
byte "mint_shares"
==
bnz main_l15
txna ApplicationArgs 0
byte "deposit_coins"
==
bnz main_l14
txna ApplicationArgs 0
byte "distribute_shares"
==
bnz main_l12
err
main_l12:
callsub distributeshares_8
main_l13:
int 0
return
main_l14:
callsub depositcoins_9
b main_l13
main_l15:
callsub mintshares_5
b main_l13
main_l16:
callsub mintcoins_4
b main_l13
main_l17:
int 0
return
main_l18:
int 0
return
main_l19:
int 0
return
main_l20:
int 0
return
main_l21:
callsub oncreate_0
int 1
return

// on_create
oncreate_0:
txn NumAppArgs
txn NumAccounts
int 2
+
==
assert
int 0
store 1
byte "company_name"
txna ApplicationArgs 0
app_global_put
byte "company_wallet"
global CurrentApplicationAddress
app_global_put
byte "coins_id"
int 0
app_global_put
byte "shares_id"
int 0
app_global_put
byte "vault_id"
int 0
app_global_put
byte "vault_wallet"
byte ""
app_global_put
int 1
store 0
oncreate_0_l1:
load 0
txn NumAccounts
<=
bz oncreate_0_l3
load 0
txnas Accounts
load 0
txnas ApplicationArgs
btoi
app_global_put
load 1
load 0
txnas ApplicationArgs
btoi
+
store 1
load 0
int 1
+
store 0
b oncreate_0_l1
oncreate_0_l3:
byte "number_of_founder"
load 0
int 1
-
app_global_put
byte "unallocated_shares"
load 0
txnas ApplicationArgs
btoi
app_global_put
load 1
load 0
txnas ApplicationArgs
btoi
+
store 1
byte "shares_total"
load 1
app_global_put
retsub

// get_global_value
getglobalvalue_1:
store 13
store 12
load 12
load 13
app_global_get_ex
store 15
store 14
load 14
retsub

// create_tokens
createtokens_2:
store 21
store 20
store 19
store 18
store 17
store 16
itxn_begin
load 21
int 1
==
bnz createtokens_2_l2
int acfg
itxn_field TypeEnum
load 16
itxn_field ConfigAssetName
load 17
itxn_field ConfigAssetUnitName
load 18
itxn_field ConfigAssetTotal
load 19
itxn_field ConfigAssetDecimals
load 20
itxn_field ConfigAssetDefaultFrozen
b createtokens_2_l3
createtokens_2_l2:
int acfg
itxn_field TypeEnum
load 16
itxn_field ConfigAssetName
load 17
itxn_field ConfigAssetUnitName
load 18
itxn_field ConfigAssetTotal
load 19
itxn_field ConfigAssetDecimals
load 20
itxn_field ConfigAssetDefaultFrozen
txna Accounts 1
itxn_field ConfigAssetReserve
createtokens_2_l3:
itxn_submit
retsub

// vault_connect_and_optIn_coins
vaultconnectandoptIncoins_3:
store 23
store 22
byte "connect_company_and_optIn_to_coins"
store 24
itxn_begin
int appl
itxn_field TypeEnum
load 22
itxn_field ApplicationID
int NoOp
itxn_field OnCompletion
load 24
itxn_field ApplicationArgs
load 23
itxn_field Assets
global CurrentApplicationID
itxn_field Applications
itxn_submit
retsub

// mint_coins
mintcoins_4:
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
assert
int 0
store 11
mintcoins_4_l1:
load 11
int 1
<
bz mintcoins_4_l3
load 11
gtxns RekeyTo
global ZeroAddress
==
assert
load 11
int 1
+
store 11
b mintcoins_4_l1
mintcoins_4_l3:
txna Applications 1
store 2
txna Accounts 1
store 3
txna ApplicationArgs 1
store 5
txna ApplicationArgs 2
store 6
txna ApplicationArgs 3
btoi
store 7
txna ApplicationArgs 4
btoi
store 8
txna ApplicationArgs 5
btoi
store 9
int 1
store 10
byte "coins_id"
app_global_get
int 0
==
byte "vault_wallet"
app_global_get
byte ""
==
&&
byte "vault_id"
app_global_get
int 0
==
&&
load 2
byte "vault_wallet"
callsub getglobalvalue_1
load 3
==
&&
txn NumAppArgs
int 6
==
&&
assert
load 5
load 6
load 7
load 8
load 9
load 10
callsub createtokens_2
itxn CreatedAssetID
store 4
load 2
load 4
callsub vaultconnectandoptIncoins_3
byte "coins_id"
load 4
app_global_put
byte "vault_id"
load 2
app_global_put
byte "vault_wallet"
load 3
app_global_put
int 1
return

// mint_shares
mintshares_5:
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
assert
int 0
store 32
mintshares_5_l1:
load 32
int 1
<
bz mintshares_5_l3
load 32
gtxns RekeyTo
global ZeroAddress
==
assert
load 32
int 1
+
store 32
b mintshares_5_l1
mintshares_5_l3:
txna ApplicationArgs 1
store 26
txna ApplicationArgs 2
store 27
byte "shares_total"
app_global_get
store 28
txna ApplicationArgs 3
btoi
store 29
txna ApplicationArgs 4
btoi
store 30
int 0
store 31
byte "shares_id"
app_global_get
int 0
==
txn NumAppArgs
int 5
==
&&
assert
load 26
load 27
load 28
load 29
load 30
load 31
callsub createtokens_2
itxn CreatedAssetID
store 25
byte "shares_id"
load 25
app_global_put
int 1
return

// company_send_tokens
companysendtokens_6:
store 42
store 41
store 40
itxn_begin
int axfer
itxn_field TypeEnum
load 40
itxn_field XferAsset
load 42
itxn_field AssetReceiver
load 41
itxn_field AssetAmount
itxn_submit
retsub

// check_assets_holding
checkassetsholding_7:
store 45
store 44
store 43
load 44
load 45
asset_holding_get AssetBalance
store 47
store 46
load 43
byte "sender"
==
bnz checkassetsholding_7_l4
load 43
byte "receiver"
==
bnz checkassetsholding_7_l3
err
checkassetsholding_7_l3:
load 47
b checkassetsholding_7_l5
checkassetsholding_7_l4:
load 46
checkassetsholding_7_l5:
retsub

// distribute_shares
distributeshares_8:
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
assert
int 0
store 38
distributeshares_8_l1:
load 38
int 1
<
bnz distributeshares_8_l11
int 0
store 39
distributeshares_8_l3:
load 39
txn NumAppArgs
<
bnz distributeshares_8_l10
txna Assets 0
store 34
byte "sender"
global CurrentApplicationAddress
load 34
callsub checkassetsholding_7
store 36
byte "shares_total"
app_global_get
store 35
byte "number_of_founder"
app_global_get
store 33
load 34
byte "shares_id"
app_global_get
==
load 36
load 35
==
&&
txn NumAppArgs
int 1
==
&&
txn NumAccounts
load 33
==
&&
assert
int 1
store 37
distributeshares_8_l5:
load 37
load 33
<=
bnz distributeshares_8_l9
int 1
store 37
distributeshares_8_l7:
load 37
load 33
<=
bz distributeshares_8_l12
load 34
load 37
txnas Accounts
app_global_get
load 37
txnas Accounts
callsub companysendtokens_6
load 37
int 1
+
store 37
b distributeshares_8_l7
distributeshares_8_l9:
load 37
txnas Accounts
app_global_get
int 0
>=
byte "receiver"
load 37
txnas Accounts
load 34
callsub checkassetsholding_7
&&
assert
load 37
int 1
+
store 37
b distributeshares_8_l5
distributeshares_8_l10:
load 39
gtxns RekeyTo
global ZeroAddress
==
assert
load 39
int 1
+
store 39
b distributeshares_8_l3
distributeshares_8_l11:
load 38
gtxns RekeyTo
global ZeroAddress
==
assert
load 38
int 1
+
store 38
b distributeshares_8_l1
distributeshares_8_l12:
int 1
return

// deposit_coins
depositcoins_9:
txna Accounts 1
store 48
txna Assets 0
store 49
byte "sender"
global CurrentApplicationAddress
load 49
callsub checkassetsholding_7
store 50
byte "coins_id"
app_global_get
load 49
==
byte "vault_wallet"
app_global_get
load 48
==
&&
byte "receiver"
load 48
load 49
callsub checkassetsholding_7
&&
load 50
int 0
>=
&&
txn NumAppArgs
int 1
==
&&
assert
load 49
load 50
load 48
callsub companysendtokens_6
int 1
return