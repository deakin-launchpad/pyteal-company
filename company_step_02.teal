#pragma version 8
txn ApplicationID
int 0
==
bnz main_l23
txn OnCompletion
int DeleteApplication
==
bnz main_l22
txn OnCompletion
int UpdateApplication
==
bnz main_l21
txn OnCompletion
int OptIn
==
bnz main_l20
txn OnCompletion
int CloseOut
==
bnz main_l19
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txna ApplicationArgs 0
byte "mint_coins"
==
bnz main_l18
txna ApplicationArgs 0
byte "mint_shares"
==
bnz main_l17
txna ApplicationArgs 0
byte "send_coins"
==
bnz main_l16
txna ApplicationArgs 0
byte "distribute_shares"
==
bnz main_l15
txna ApplicationArgs 0
byte "bind_vault"
==
bnz main_l13
err
main_l13:
callsub bindvault_10
main_l14:
int 0
return
main_l15:
callsub distributeshares_7
b main_l14
main_l16:
callsub sendcoins_8
b main_l14
main_l17:
callsub mintshares_4
b main_l14
main_l18:
callsub mintcoins_3
b main_l14
main_l19:
int 0
return
main_l20:
int 0
return
main_l21:
int 0
return
main_l22:
int 0
return
main_l23:
callsub oncreate_1
int 1
return

// convert_uint_to_bytes
convertuinttobytes_0:
store 1
load 1
int 0
==
bnz convertuinttobytes_0_l5
byte ""
store 2
load 1
store 3
convertuinttobytes_0_l2:
load 3
int 0
>
bnz convertuinttobytes_0_l4
load 2
b convertuinttobytes_0_l6
convertuinttobytes_0_l4:
load 3
int 10
%
store 4
byte "0123456789"
load 4
load 4
int 1
+
substring3
load 2
concat
store 2
load 3
int 10
/
store 3
b convertuinttobytes_0_l2
convertuinttobytes_0_l5:
byte "0"
convertuinttobytes_0_l6:
retsub

// on_create
oncreate_1:
txn NumAppArgs
int 1
==
assert
byte "company_name"
txna ApplicationArgs 0
app_global_put
byte "company_wallet"
global CurrentApplicationAddress
app_global_put
byte "coins_id"
int 0
app_global_put
byte "shares_id"
int 0
app_global_put
byte "vault_id"
int 0
app_global_put
byte "vault_wallet"
byte ""
app_global_put
int 1
store 0
oncreate_1_l1:
load 0
txn NumAccounts
int 1
+
<
bz oncreate_1_l3
byte "founder"
load 0
callsub convertuinttobytes_0
concat
load 0
txnas Accounts
app_global_put
load 0
int 1
+
store 0
b oncreate_1_l1
oncreate_1_l3:
byte "number_of_founder"
load 0
int 1
-
app_global_put
retsub

// create_tokens
createtokens_2:
store 11
store 10
store 9
store 8
store 7
store 6
itxn_begin
load 11
int 1
==
bnz createtokens_2_l2
int acfg
itxn_field TypeEnum
load 6
itxn_field ConfigAssetName
load 7
itxn_field ConfigAssetUnitName
load 8
itxn_field ConfigAssetTotal
load 9
itxn_field ConfigAssetDecimals
load 10
itxn_field ConfigAssetDefaultFrozen
b createtokens_2_l3
createtokens_2_l2:
int acfg
itxn_field TypeEnum
load 6
itxn_field ConfigAssetName
load 7
itxn_field ConfigAssetUnitName
load 8
itxn_field ConfigAssetTotal
load 9
itxn_field ConfigAssetDecimals
load 10
itxn_field ConfigAssetDefaultFrozen
txna Accounts 1
itxn_field ConfigAssetReserve
createtokens_2_l3:
itxn_submit
retsub

// mint_coins
mintcoins_3:
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
assert
int 0
store 5
mintcoins_3_l1:
load 5
int 1
<
bz mintcoins_3_l3
load 5
gtxns RekeyTo
global ZeroAddress
==
assert
load 5
int 1
+
store 5
b mintcoins_3_l1
mintcoins_3_l3:
byte "coins_id"
app_global_get
int 0
==
byte "vault_wallet"
app_global_get
txna Accounts 1
==
&&
txn NumAppArgs
int 6
==
&&
assert
txna ApplicationArgs 1
txna ApplicationArgs 2
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
btoi
txna ApplicationArgs 5
btoi
int 0
callsub createtokens_2
byte "coins_id"
itxn CreatedAssetID
app_global_put
int 1
return

// mint_shares
mintshares_4:
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
assert
int 0
store 12
mintshares_4_l1:
load 12
int 1
<
bz mintshares_4_l3
load 12
gtxns RekeyTo
global ZeroAddress
==
assert
load 12
int 1
+
store 12
b mintshares_4_l1
mintshares_4_l3:
byte "shares_id"
app_global_get
int 0
==
txn NumAppArgs
int 6
==
&&
assert
txna ApplicationArgs 1
txna ApplicationArgs 2
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
btoi
txna ApplicationArgs 5
btoi
int 0
callsub createtokens_2
byte "shares_id"
itxn CreatedAssetID
app_global_put
int 1
return

// company_send_tokens
companysendtokens_5:
store 21
store 20
store 19
itxn_begin
int axfer
itxn_field TypeEnum
load 19
itxn_field XferAsset
load 21
itxn_field AssetReceiver
load 20
itxn_field AssetAmount
itxn_submit
retsub

// check_assets_holding
checkassetsholding_6:
store 24
store 23
store 22
load 23
load 24
asset_holding_get AssetBalance
store 26
store 25
load 22
byte "sender"
==
bnz checkassetsholding_6_l4
load 22
byte "receiver"
==
bnz checkassetsholding_6_l3
err
checkassetsholding_6_l3:
load 26
b checkassetsholding_6_l5
checkassetsholding_6_l4:
load 25
checkassetsholding_6_l5:
retsub

// distribute_shares
distributeshares_7:
global GroupSize
txn NumAppArgs
==
txn GroupIndex
txn NumAppArgs
int 1
-
==
&&
assert
int 0
store 18
distributeshares_7_l1:
load 18
txn NumAppArgs
<
bnz distributeshares_7_l14
byte "shares_id"
app_global_get
store 14
byte "sender"
global CurrentApplicationAddress
load 14
callsub checkassetsholding_6
store 15
byte "number_of_founder"
app_global_get
store 13
int 0
store 16
int 1
store 17
distributeshares_7_l3:
load 17
load 13
<=
bnz distributeshares_7_l13
load 14
int 0
!=
txna Assets 0
load 14
==
&&
load 15
load 16
==
&&
txn NumAppArgs
load 13
int 1
+
==
&&
assert
int 1
store 17
distributeshares_7_l5:
load 17
load 13
<=
bnz distributeshares_7_l12
int 1
store 17
distributeshares_7_l7:
load 17
load 13
<=
bnz distributeshares_7_l11
int 1
store 17
distributeshares_7_l9:
load 17
load 13
<=
bz distributeshares_7_l15
load 14
load 17
txnas ApplicationArgs
btoi
byte "founder"
load 17
callsub convertuinttobytes_0
concat
app_global_get
callsub companysendtokens_5
load 17
int 1
+
store 17
b distributeshares_7_l9
distributeshares_7_l11:
byte "receiver"
byte "founder"
load 17
callsub convertuinttobytes_0
concat
app_global_get
load 14
callsub checkassetsholding_6
assert
load 17
int 1
+
store 17
b distributeshares_7_l7
distributeshares_7_l12:
load 17
txnas Accounts
byte "founder"
load 17
callsub convertuinttobytes_0
concat
app_global_get
==
assert
load 17
int 1
+
store 17
b distributeshares_7_l5
distributeshares_7_l13:
load 16
load 17
txnas ApplicationArgs
btoi
+
store 16
load 17
int 1
+
store 17
b distributeshares_7_l3
distributeshares_7_l14:
load 18
gtxns RekeyTo
global ZeroAddress
==
assert
load 18
int 1
+
store 18
b distributeshares_7_l1
distributeshares_7_l15:
int 1
return

// send_coins
sendcoins_8:
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
assert
int 0
store 30
sendcoins_8_l1:
load 30
int 1
<
bz sendcoins_8_l3
load 30
gtxns RekeyTo
global ZeroAddress
==
assert
load 30
int 1
+
store 30
b sendcoins_8_l1
sendcoins_8_l3:
byte "coins_id"
app_global_get
store 27
txna ApplicationArgs 1
btoi
store 28
txna Accounts 1
store 29
load 27
int 0
!=
txna Assets 0
load 27
==
&&
byte "sender"
global CurrentApplicationAddress
load 27
callsub checkassetsholding_6
load 28
>=
&&
byte "receiver"
load 29
load 27
callsub checkassetsholding_6
&&
txn NumAppArgs
int 2
==
&&
txn NumAccounts
int 2
==
&&
assert
load 27
load 28
load 29
callsub companysendtokens_5
int 1
return

// get_global_value
getglobalvalue_9:
store 34
store 33
load 33
load 34
app_global_get_ex
store 36
store 35
load 35
retsub

// bind_vault
bindvault_10:
txna Applications 0
store 31
txna Accounts 1
store 32
byte "vault_id"
app_global_get
int 0
==
byte "vault_wallet"
app_global_get
byte ""
==
&&
load 31
byte "vault_wallet"
callsub getglobalvalue_9
load 32
==
&&
load 32
txn Sender
==
&&
txn NumAppArgs
int 1
==
&&
assert
byte "vault_id"
load 31
app_global_put
byte "vault_wallet"
load 32
app_global_put
int 1
return